
from fastapi import FastAPI,status,HTTPException
from . import schema
from random import randrange

app= FastAPI()

usersData=[]

# common function for searching

def searchUser(id):
    for index,data in enumerate(usersData):
        if(data['id'] == id):
            return index


# find the user
@app.get('/finduser/{id}')
def findUserById(id:int):
    findData= searchUser(id)
    if findData == None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,detail="OOPS !! Given user ID not Found")
    return {'message': findData}

# delete the User
@app.delete('/deleteuser/{id}')
def deleteUserById(id:int):
    findData= searchUser(id)
    if findData == None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,detail="OOPS !! Given user ID not Found")
    usersData.pop(findData)
    return {'message': 'User Found and deleted'}

# load the userdata array
@app.get('/loaddata')
def loadUsers():
    return {'users': usersData}

# add data to array
@app.post('/adduser')
def addUser(payload:schema.User):
    data= payload.model_dump()
    data['id']=randrange(1,1000)
    usersData.append(data)
    return {'message': data}
    






